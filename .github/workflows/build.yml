name: release
on:
  workflow_dispatch:

jobs:
  rust:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary: lightningcss_cs_bindings.dll
            rid: win-x64
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            binary: lightningcss_cs_bindings.dll
            rid: win-arm64
          # Mac OS
          - os: macos-latest
            target: x86_64-apple-darwin
            binary: liblightningcss_cs_bindings.dylib
            rid: osx-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary: liblightningcss_cs_bindings.dylib
            rid: osx-arm64
          # Linux
          - os:      ubuntu-latest
            target:  x86_64-unknown-linux-gnu
            binary:  liblightningcss_cs_bindings.so
            rid: linux-x64
          - os: 	   ubuntu-24.04-arm
            target:  aarch64-unknown-linux-gnu
            binary:  liblightningcss_cs_bindings.so
            rid: linux-arm64
          - os: 	   ubuntu-24.04-arm
            target:  armv7-unknown-linux-gnueabihf
            binary:  liblightningcss_cs_bindings.so
            install: sudo apt-get update && sudo apt-get install gcc-arm-linux-gnueabihf
            rid: linux-arm
          - os: 	   ubuntu-24.04-arm
            target:  aarch64-unknown-linux-musl
            binary:  liblightningcss_cs_bindings.so
            rid: linux-musl-arm64
          - os:      ubuntu-latest
            target:  x86_64-unknown-linux-musl
            binary:  liblightningcss_cs_bindings.so
            rid: linux-musl-x64

    name: build-${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup rust target
        run: rustup target add ${{ matrix.target }}

      - name: install linker
        if: ${{ matrix.install }}
        run: ${{ matrix.install }}

      - name: Build Rust
        working-directory: rust
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Create folder
        shell: pwsh
        run: New-Item -Path runtimes/${{ matrix.rid }}/native -ItemType Directory
      - name: Move output
        shell: pwsh
        run: Move-Item -Path rust/target/${{ matrix.target }}/release/${{ matrix.binary }} -Destination runtimes/${{ matrix.rid }}/native/${{ matrix.binary }}
      - name: Move bindings
        shell: pwsh
        run: Move-Item -Path dotnet/NativeMethods.g.cs -Destination NativeMethods.g.cs
      # - name: Strip debug symbols # https://github.com/rust-lang/rust/issues/46034
      #   if: ${{ matrix.strip }}
      #   run: ${{ matrix.strip }} *.node ${{ matrix.binary }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.rid }}
          path: |
            runtimes/${{ matrix.rid }}/native/${{ matrix.binary }}
            NativeMethods.g.cs
  


  dotnet:
    needs: [rust]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          path: dotnet
          merge-multiple: true
      - uses: actions/setup-dotnet@v4
      - run: dotnet pack
        working-directory: dotnet
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: |
            dotnet/bin/Release/lightningcss.*.nupkg
      
      