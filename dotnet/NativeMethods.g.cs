// <auto-generated>
// This code is generated by csbindgen.
// DON'T CHANGE THIS DIRECTLY.
// </auto-generated>
#pragma warning disable CS8500
#pragma warning disable CS8981
using System;
using System.Runtime.InteropServices;


namespace CsBindgen
{
    internal static unsafe partial class NativeMethods
    {
        const string __DllName = "lightningcss_cs_bindings";



        [DllImport(__DllName, EntryPoint = "lightningcss_browserslist_to_targets", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        internal static extern bool lightningcss_browserslist_to_targets(byte* query, Targets* targets, CssError** error);

        [DllImport(__DllName, EntryPoint = "lightningcss_stylesheet_parse", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern StyleSheetWrapper* lightningcss_stylesheet_parse(byte* source, nuint len, ParseOptions options, CssError** error);

        [DllImport(__DllName, EntryPoint = "lightningcss_stylesheet_transform", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        internal static extern bool lightningcss_stylesheet_transform(StyleSheetWrapper* stylesheet, TransformOptions options, CssError** error);

        [DllImport(__DllName, EntryPoint = "lightningcss_stylesheet_to_css", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern ToCssResult lightningcss_stylesheet_to_css(StyleSheetWrapper* stylesheet, ToCssOptions options, CssError** error);

        [DllImport(__DllName, EntryPoint = "lightningcss_stylesheet_free", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void lightningcss_stylesheet_free(StyleSheetWrapper* stylesheet);

        [DllImport(__DllName, EntryPoint = "lightningcss_to_css_result_free", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void lightningcss_to_css_result_free(ToCssResult result);

        [DllImport(__DllName, EntryPoint = "lightningcss_error_message", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern byte* lightningcss_error_message(CssError* error);

        [DllImport(__DllName, EntryPoint = "lightningcss_error_free", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void lightningcss_error_free(CssError* error);

        [DllImport(__DllName, EntryPoint = "lightningcss_stylesheet_get_warning_count", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern nuint lightningcss_stylesheet_get_warning_count(StyleSheetWrapper* stylesheet);

        [DllImport(__DllName, EntryPoint = "lightningcss_stylesheet_get_warning", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern byte* lightningcss_stylesheet_get_warning(StyleSheetWrapper* stylesheet, nuint index);


    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct StyleSheetWrapper
    {
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct CssError
    {
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct ParseOptions
    {
        public byte* filename;
        [MarshalAs(UnmanagedType.U1)] public bool nesting;
        [MarshalAs(UnmanagedType.U1)] public bool custom_media;
        [MarshalAs(UnmanagedType.U1)] public bool css_modules;
        public byte* css_modules_pattern;
        [MarshalAs(UnmanagedType.U1)] public bool css_modules_dashed_idents;
        [MarshalAs(UnmanagedType.U1)] public bool error_recovery;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct Targets
    {
        public uint android;
        public uint chrome;
        public uint edge;
        public uint firefox;
        public uint ie;
        public uint ios_saf;
        public uint opera;
        public uint safari;
        public uint samsung;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct TransformOptions
    {
        public Targets targets;
        public byte** unused_symbols;
        public nuint unused_symbols_len;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct ToCssOptions
    {
        [MarshalAs(UnmanagedType.U1)] public bool minify;
        [MarshalAs(UnmanagedType.U1)] public bool source_map;
        public byte* input_source_map;
        public nuint input_source_map_len;
        public byte* project_root;
        public Targets targets;
        [MarshalAs(UnmanagedType.U1)] public bool analyze_dependencies;
        public PseudoClasses pseudo_classes;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct PseudoClasses
    {
        public byte* hover;
        public byte* active;
        public byte* focus;
        public byte* focus_visible;
        public byte* focus_within;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct ToCssResult
    {
        public RawString code;
        public RawString map;
        public CssModuleExport* exports;
        public nuint exports_len;
        public CssModulePlaceholder* references;
        public nuint references_len;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct CssModuleExport
    {
        public RawString exported;
        public RawString local;
        [MarshalAs(UnmanagedType.U1)] public bool is_referenced;
        public CssModuleReference* composes;
        public nuint composes_len;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct CssModuleReference
    {
        public RawString name;
        public RawString specifier;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct CssModulePlaceholder
    {
        public RawString placeholder;
        public CssModuleReference reference;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct RawString
    {
        public byte* text;
        public nuint len;
    }



}
